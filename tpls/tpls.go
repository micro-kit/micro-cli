// Package main Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// microservice/.gitignore
// microservice/CodeFormat.md
// microservice/Dockerfile
// microservice/Makefile
// microservice/README.md
// microservice/main.go
// microservice/program/models/README.md
// microservice/program/models/user.go
// microservice/program/program.go
// microservice/program/services/admin.go
// microservice/program/services/base.go
// microservice/program/services/foreground.go
// microservice/test/login_test.go
// microservice/test/test.sh
// microservice/version
// client/README.md
// client/client/tpl/README.md
// client/client/tpl/admin.go
// client/client/tpl/foreground.go
// client/proto/tpl/README.md
// client/proto/tpl/admin.proto
// client/proto/tpl/foreground.proto
// client/proto/tpl/gen.sh
package tpls

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _microserviceGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\x41\x4a\x04\x31\x10\x45\xf7\x75\x8a\x0f\xb3\x6b\xc6\x1c\x42\x74\x21\x08\x6e\x3c\xc0\xa4\x93\xea\x74\x41\x4c\x35\xa9\xca\x8c\xbd\xf1\xec\x12\x74\xf3\x79\xf0\x1f\xef\x82\x67\x69\xb1\x0b\x1b\x36\xed\x38\xba\x96\x1e\xbf\x0c\xb1\x65\x1c\x75\x14\x69\x46\x4b\xe0\x6f\xfe\xdb\x1f\x5a\x42\xae\x95\x96\x60\x3a\xf1\xac\xb2\x12\x5d\xf0\xc9\xe6\x58\x67\xe9\xbc\x62\x1d\x52\x33\x1e\xe2\x3b\x6e\x45\xe1\xf3\x7b\x4a\x37\x5a\xc2\xc4\xa9\x7f\x0c\x3f\x86\x43\x37\xf8\xce\x28\x8a\xa4\x77\xee\xb1\x30\x5c\xb5\x5e\x61\x07\x27\xd9\x24\xc5\x5a\x4f\x3c\x76\x6e\x18\xc6\xff\xc9\x77\x71\x7e\x7b\x79\xa5\x25\xe8\x70\xa2\x20\x99\x23\x85\xbb\x25\xcd\x4c\xab\x34\xaa\x5a\x8c\x7e\x03\x00\x00\xff\xff\x35\xf0\x71\x52\xd8\x00\x00\x00")

func microserviceGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_microserviceGitignore,
		"microservice/.gitignore",
	)
}

func microserviceGitignore() (*asset, error) {
	bytes, err := microserviceGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/.gitignore", size: 216, mode: os.FileMode(420), modTime: time.Unix(1574245224, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceCodeformatMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x72\x00\x8d\xff\x23\x20\xe7\xbc\x96\xe7\xa0\x81\xe8\xa7\x84\xe8\x8c\x83\x0a\x0a\x31\x2e\x20\x70\x72\x6f\x74\x6f\xe6\x96\x87\xe4\xbb\xb6\xe4\xb8\xad\xe5\xad\x97\xe6\xae\xb5\xef\xbc\x8c\xe4\xbd\xbf\xe7\x94\xa8\xe5\xb0\x8f\xe5\x86\x99\x2b\xe4\xb8\x8b\xe5\x88\x92\xe7\xba\xbf\x0a\x32\x2e\x20\xe9\xa1\xb9\xe7\x9b\xae\xe4\xb8\xad\xe7\xa6\x81\xe6\xad\xa2\xe4\xbd\xbf\xe7\x94\xa8\x69\x6e\x74\xe4\xbd\x9c\xe4\xb8\xba\xe6\x95\xb4\xe6\x95\xb0\xe7\xb1\xbb\xe5\x9e\x8b\xe3\x80\x82\x0a\x01\x00\x00\xff\xff\xfc\xca\x0a\x14\x72\x00\x00\x00")

func microserviceCodeformatMdBytes() ([]byte, error) {
	return bindataRead(
		_microserviceCodeformatMd,
		"microservice/CodeFormat.md",
	)
}

func microserviceCodeformatMd() (*asset, error) {
	bytes, err := microserviceCodeformatMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/CodeFormat.md", size: 114, mode: os.FileMode(420), modTime: time.Unix(1574244782, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8d\x4d\x4b\x02\x41\x18\xc7\xef\xf3\x29\x1e\x14\xbc\xe9\xda\xb1\xae\x6a\x10\xa5\x2b\x2b\xf6\x42\x75\x98\x76\x47\x5b\x32\x5d\x74\xea\x90\x08\x29\xd1\xeb\x86\x11\x85\xbd\x78\x29\x4b\x85\xc2\x21\x02\x25\x69\xbf\x8d\xb3\xce\x7e\x8b\x70\x53\x28\xa8\xeb\xff\xf7\xfb\x3d\xcf\xac\x22\x47\x01\x67\x0c\x3d\x4b\x66\x32\x98\x92\x02\x45\x5e\x10\xad\x06\x3f\x7c\x4f\xe7\xc0\xae\x75\xb9\xd9\xe7\x97\xe6\x26\xa5\x46\x41\xb0\x9e\xfd\x56\x11\xac\x3c\xf8\x68\x3a\x57\xb7\x82\x31\xa7\xd6\x71\x1e\x6f\x90\x92\x8c\x01\x60\x63\x0b\x76\x0c\x0d\x53\x02\x6b\x08\xc0\xe7\x73\x17\xac\x69\xa0\x62\xbf\x4a\xf2\x54\x4f\xe9\xea\xe8\xc3\x04\x7f\xcb\xfe\x7f\xe8\x24\xa6\x7b\x1a\xa6\x18\x21\x2f\x38\xf5\x7d\xd1\x2c\xdb\x66\x45\x58\xd6\xf0\xbe\xc3\xad\x6b\xb4\x28\x2f\x24\xa3\x11\x90\x46\x8a\x94\xc9\xa5\x0b\xbf\x17\x35\x97\x4d\xe9\xe9\x51\xcb\x7b\xcf\x03\xab\x3e\xae\x96\x64\x65\x3e\x3c\xa7\x8c\x25\x17\xb3\x4f\x7e\xd4\x1f\xbe\x30\x5e\x6d\xa0\xc8\x72\x5c\x4e\x44\x60\x3a\x18\x9c\x72\xd9\xd3\x39\x3f\xee\xf2\x2a\xb3\x4f\x5a\xe2\xc1\x1c\xb6\xcf\x78\xbf\x8a\x42\x72\x7c\x05\x02\xd2\x86\x9e\x95\x8a\x45\x08\x24\x48\x7e\x57\x57\x49\x0c\x6f\x13\x28\x95\x7e\x5e\xbe\x60\xfc\xb4\x2d\x0e\xee\xec\xfa\x2b\x0a\x45\xc3\xb0\xea\x09\xfc\x51\x78\xd6\xd1\x57\x00\x00\x00\xff\xff\x2f\x69\x50\x4f\x8a\x01\x00\x00")

func microserviceDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_microserviceDockerfile,
		"microservice/Dockerfile",
	)
}

func microserviceDockerfile() (*asset, error) {
	bytes, err := microserviceDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/Dockerfile", size: 394, mode: os.FileMode(420), modTime: time.Unix(1574326773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceMakefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x5f\x6b\xd3\x50\x18\xc6\xaf\x77\x3e\xc5\x4b\x97\xd0\x56\x49\xea\x85\x78\x11\x08\x2c\xcb\x42\x13\x58\x93\x91\xd4\x61\x11\x69\xb3\xe4\xb4\x0b\xcb\x1f\x4d\xd2\x6d\xd2\x15\x14\x41\x37\xd9\xd8\xbc\x70\xbb\x30\x5e\x08\x82\x5e\x08\x0a\x4a\x2f\xa6\xe2\x97\x69\xb2\xed\xca\xaf\x20\x4d\x13\x4d\x61\x53\xf0\xf2\x9c\xf3\x9c\xf7\x79\xde\xf7\xfc\xce\xa2\x24\x73\x6a\xab\x2d\x73\x0d\x81\x1d\x0c\x80\xd6\xb0\xbf\x69\x19\x58\xd6\x1d\x0c\xc3\x21\xcc\xc3\xf8\x74\xff\xfc\xc7\xab\x78\x77\x94\x1c\x3f\x1b\x7f\x1d\xc5\x47\x07\x48\x13\xd4\x55\x89\x17\xfe\x72\x29\xf9\xfc\x3e\x7e\xba\x9f\x44\x07\xf1\xf3\x37\x93\x1b\xbc\xd2\x58\x91\x96\x85\x76\x53\x6a\x08\xc0\x02\x51\x09\xd6\xb1\x6d\x83\xa9\x87\x18\xae\x97\xc8\x16\xd9\x20\x4d\x52\x24\x1b\xa4\x56\xaa\xc2\x3c\x9c\x7d\x3b\x3e\xff\xf8\x22\x39\x19\x5d\x9c\x7c\x41\x8b\x2a\x27\xf3\x22\xdb\xe9\x59\x21\x04\x0f\x9d\x35\xcf\xb6\x0c\xca\xc7\x5d\xa0\xa8\x60\xdd\xf3\x43\xa0\x1e\x80\x28\x70\x4b\x1d\x98\x87\x9e\x15\x26\x87\x47\xe3\xd3\xb7\x67\x7b\xbb\x49\xf4\x01\xad\x0a\xaa\x26\x29\x32\x5b\xa2\xee\x80\xa3\x5b\x2e\x9d\x6f\x74\x0c\x3d\x84\xf2\x26\xf6\x03\xcb\x73\xcb\x1d\xc8\xcf\xf3\xa0\x4b\x5c\x53\x60\x3b\x44\xa5\x18\xbc\xfa\x47\x56\x97\x9a\x6d\x91\xd3\xb2\x54\x3e\xde\xa4\xee\xeb\x7e\x80\xb3\x1c\x54\x50\x42\xaa\x50\x97\xb4\xa6\xda\x62\x27\xed\xbc\x7b\x9c\x44\x7b\x17\x2f\xa3\xf8\xc9\x61\x1c\x7d\x8a\x5f\x3f\x42\xc8\xc4\x5d\xbd\x6f\x87\x0c\x9a\x5b\xc0\xc6\xba\x07\xe5\xdb\x81\xde\xc3\xe0\x75\xc1\xd1\x37\x30\x03\x77\x61\xad\x6f\xd9\x26\xec\x80\x6d\xb9\xfd\xed\x76\xbe\xda\xb2\x5c\xd3\xdb\x0a\xb2\xf5\xcf\xef\x11\xf8\x7d\x17\x76\xc0\xf4\x8c\x0d\xec\xff\x96\x19\x36\xd6\x5d\xb8\x57\x46\x28\xdd\x61\x00\xcd\x2d\xf4\xbc\xac\x26\x65\x9b\x5d\x5b\xef\x05\x40\x0c\xb2\x79\x0c\x81\xf2\x80\xae\xad\x59\x6e\x8d\x18\x14\x90\x18\x02\x5d\x43\xa8\x90\x20\x2d\xc4\xd7\x95\xb6\x20\x73\x8b\xcb\xc2\x12\x7b\x03\xea\x8a\xa2\xb1\xa9\x04\xea\x0a\xa7\xf2\x22\xab\x3b\xe6\xad\x9b\xf0\xdf\x76\x33\x2d\x5e\x65\x98\x89\xae\xb0\xfc\xb7\x13\x8d\xb7\x71\xea\x56\x1c\x1c\x53\x1c\x36\x9a\x5b\x98\x9e\xe5\x6d\x84\x40\x54\xf2\x67\xad\xd6\x82\x29\xf3\x35\xa2\x52\x28\x5b\x65\x88\xca\x94\xd7\x2a\xd0\x08\xf9\x7d\x97\x81\xbc\x98\xb6\xca\x4f\x7f\x0c\x31\x28\x7e\xa0\xe1\xa5\xf1\x10\x4a\x5f\x30\xed\xde\x77\x80\xea\x5e\xaa\xba\x86\x10\xbd\x22\x2a\x72\x8b\x81\x8c\xa7\x2c\x6b\x91\x99\x59\x62\x26\xb4\xcc\xb0\x92\xfa\xfc\x0a\x00\x00\xff\xff\x59\x57\x46\xb9\x06\x04\x00\x00")

func microserviceMakefileBytes() ([]byte, error) {
	return bindataRead(
		_microserviceMakefile,
		"microservice/Makefile",
	)
}

func microserviceMakefile() (*asset, error) {
	bytes, err := microserviceMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/Makefile", size: 1030, mode: os.FileMode(420), modTime: time.Unix(1574763914, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xa8\xae\x56\xd0\x0b\x4e\x2d\x2a\xcb\x4c\x4e\xf5\x4b\xcc\x4d\xf5\x28\xcd\x2d\x50\xa8\xad\xe5\x02\x04\x00\x00\xff\xff\x48\x44\x5e\xfd\x19\x00\x00\x00")

func microserviceReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_microserviceReadmeMd,
		"microservice/README.md",
	)
}

func microserviceReadmeMd() (*asset, error) {
	bytes, err := microserviceReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/README.md", size: 25, mode: os.FileMode(420), modTime: time.Unix(1574326753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x52\x5f\x4f\x13\x4f\x14\x7d\x9e\xf9\x14\x37\x9b\xfc\x92\xd9\xa4\x6c\x7f\xbc\xa2\x98\xf0\x80\xd0\x88\x15\xbb\xc5\x17\x63\x64\xb3\xee\x9f\x09\xbb\x3b\xcd\xce\x50\x25\xd0\x04\x78\x01\x05\x03\x6a\x84\x1a\x1a\x4c\x0d\x12\x1f\xc0\x9a\x98\x68\xd2\x1a\xfa\x65\x3a\x5b\x7c\xf2\x2b\x98\xd9\x5d\x8c\x55\x5f\x76\xe7\x9e\x7b\xcf\x9d\x39\xf7\xdc\x9a\x65\x2f\x59\x9e\x03\xa1\x45\x23\x8c\x69\x58\x63\xb1\x00\x82\x91\xe6\x86\x42\xc3\x48\x0b\x98\xa7\x7e\x8c\x67\xdf\x22\xa7\x5e\x64\x05\x2a\xe0\x2b\xdc\xb6\x82\x40\xc3\x18\x69\xab\xab\x60\x54\x18\x13\xf3\x96\xf0\xa1\xd1\x28\xaa\xd8\x74\xe2\x3a\xb5\x9d\xb2\x15\x3a\x0a\xaa\xc5\xcc\x8b\xad\x50\xc3\x3a\xc6\x75\x2b\x56\x77\xdc\x9b\xae\x98\xa5\x3b\x65\x00\x2e\x62\x1a\x79\x50\x2c\xc2\xf0\xc3\x8e\xec\xee\x0d\x9f\x6e\x27\xad\x33\x8c\x66\x4a\xd5\x87\xb3\x53\xe6\xec\x6f\x05\x1e\x15\xe0\x5b\xdc\x57\x6d\xdc\xe5\xc8\x4e\x1f\x4e\x74\x58\xc5\x48\xd1\x3f\xf7\x86\xbd\xb7\xc9\xe1\x7b\xd9\x3f\x4c\x9a\x17\xc3\x93\x6e\x72\xb0\x35\xe8\x7d\x91\x2f\x77\x2f\xdb\xbb\x72\xef\x6b\x5a\x15\x30\xcf\x30\x1d\x71\x33\xb0\x3c\x4e\x54\x30\xc7\x7d\x16\x0b\x97\x06\x0e\xac\x41\x06\x88\x47\x69\x5a\xc7\xe8\xef\xea\x80\x45\xde\xbf\x8b\xd3\xf6\x72\xfb\x24\x39\x38\x4f\x9a\x1d\xb9\x7f\x9a\x34\x3b\x63\x75\xb9\xb7\x99\xbc\xfe\x24\x4f\x37\x93\xe3\x56\xd2\xec\xfc\xf8\xb6\x2b\xb7\xdf\x5c\x5e\xbc\x92\x5b\xdd\x4c\xe9\xa0\xdf\x4e\x36\x3a\x18\x51\x17\x02\x27\x22\x8c\x1b\x53\xb1\xc7\x75\xb8\x01\xe3\x4a\x98\xc2\x73\xec\xfe\xf8\x03\x98\x9c\x04\x6d\xac\xae\xc1\xda\xda\x9f\x68\xdd\x89\x39\x65\x91\x96\x92\x90\x1b\x0a\x63\x3e\xa6\x91\x70\xc9\x62\x9e\x99\x80\xff\x38\xf6\xa8\x50\x13\x54\xe7\xc5\x02\xe4\x26\x14\xe0\x6a\xd8\xba\xe2\xc6\x8e\x58\x8e\x23\x8c\x50\x03\xa3\xc6\x95\xac\x23\xd9\xeb\x66\x06\xc9\x8f\xc7\x83\x8b\x1d\x8c\x6a\x30\x31\x09\xb9\xb3\x46\xd9\x79\x4c\x74\x8c\x6a\x46\x65\x39\x22\xf9\x2c\x86\x47\x2f\xe4\xfe\xd9\xf7\xf5\x75\xb9\xd5\x1d\xf4\xdb\xa9\x03\xb6\xaf\x58\xa1\xb5\xe4\x10\xdb\xb7\x22\x25\xc2\x4c\xb7\x4a\xc7\x28\x5b\x2f\xa3\xcc\x04\x75\x57\x88\xed\x17\x20\x5f\x33\xc3\x2c\xcd\x54\xa7\x2b\xb7\x47\x80\x52\xb9\x3a\x12\xdf\x2a\xcd\xcd\x8d\x00\xb3\x0b\xf3\x23\xf1\xdd\x85\x52\x35\xbb\x45\x3d\xe1\xfa\x98\xed\x67\xd2\x36\x5a\xc9\xf9\xbb\xa4\xf5\x5c\x3e\x6b\x2b\x01\xa6\x60\x35\x92\x5b\x9f\x4e\x30\x88\x88\x36\xfd\x84\x0a\x4d\x4f\x4d\xa2\x05\x60\x4b\xaa\x03\xa7\x9e\x41\x7e\xf5\xcf\x44\x5c\x53\x39\x65\x00\xe3\x86\xe2\x10\x1a\x09\x42\x75\x1d\xa3\x06\x38\x01\x77\x46\x72\xff\x2b\x18\x37\xf0\xcf\x00\x00\x00\xff\xff\x80\xd1\xa3\x04\x87\x03\x00\x00")

func microserviceMainGoBytes() ([]byte, error) {
	return bindataRead(
		_microserviceMainGo,
		"microservice/main.go",
	)
}

func microserviceMainGo() (*asset, error) {
	bytes, err := microserviceMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/main.go", size: 903, mode: os.FileMode(420), modTime: time.Unix(1574326784, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceProgramModelsReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x78\xba\xa4\xfd\xd9\xe6\x15\x5c\x5c\xcf\xd6\x2e\x79\x36\xad\xfd\xc9\xee\x6d\x4f\x97\xec\x7c\x3e\x65\xc5\x93\x5d\x7d\x4f\xd7\xce\x78\xda\xb4\x02\x24\x3e\xa7\xf7\x69\xd7\xc2\x27\x7b\xf7\x3f\x9f\xb2\xe2\x69\xc7\x86\xe7\xb3\x5a\x9e\xad\x58\xf8\x74\x5e\x37\x17\x17\x44\x06\xc2\x7b\x39\xa7\xe1\xf9\x9a\x65\x4f\x27\x74\xa4\xe7\x17\xe5\x3e\x9b\xba\xe1\x59\xef\xba\xa7\xbb\x26\x83\xd8\x0b\xdb\x9e\xcd\xdb\xf6\x62\x79\xcb\x8b\x9e\x66\x40\x00\x00\x00\xff\xff\xd6\x78\x99\x67\x70\x00\x00\x00")

func microserviceProgramModelsReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_microserviceProgramModelsReadmeMd,
		"microservice/program/models/README.md",
	)
}

func microserviceProgramModelsReadmeMd() (*asset, error) {
	bytes, err := microserviceProgramModelsReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/program/models/README.md", size: 112, mode: os.FileMode(420), modTime: time.Unix(1574244782, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceProgramModelsUserGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x52\x4d\x6b\xd4\x40\x18\x3e\xe7\xfd\x15\x2f\x73\x4a\x64\x37\xb9\x2f\x94\x82\xd4\x8f\x83\x16\xc1\x8a\xd7\xcc\x26\xd3\xec\x74\x33\x33\x61\x32\x51\x6a\x29\xe8\x45\xf4\x10\x28\xd8\x52\x3c\xb9\x0a\xc2\x9e\x5a\x4f\x8a\x1f\xc5\x3f\x63\x92\xfe\x0c\x99\xcd\x47\x75\xdb\x5b\x78\x9f\x8f\xf7\xc9\xf3\x4e\x46\xa3\x39\x4d\x18\x0a\x15\xb3\x34\x07\xe0\x22\x53\xda\xa0\x0b\x0e\x49\xb8\x99\x15\x53\x3f\x52\x22\xd8\xe3\xf2\xc5\xac\x08\x12\xa5\x05\xf9\x1f\x11\x3c\xd2\x6a\x3c\xe7\xa6\xfb\x8a\x94\x10\x4a\x06\xf1\x94\x80\x07\x10\x04\xf8\x24\x67\x1a\x2f\x3f\x2e\xab\xa3\x72\x5c\x9f\x2e\xaa\xb7\x65\xf3\xeb\x25\x98\xfd\x8c\xb5\x50\x6e\x74\x11\x19\x3c\x00\xc7\xba\xfb\x0f\x6d\x0e\x0c\xf7\x72\x25\x27\x64\x4c\x42\x70\x2c\x4b\x52\xc1\x10\x2d\x97\xcb\xa4\x47\x8b\x0e\x20\x68\x95\x13\x12\xa9\xb4\x10\x72\x32\x8c\x43\x70\xb6\x79\x34\xbf\x51\x2b\x3b\x60\x4d\x3b\x8c\x43\x70\x1e\xd1\x3c\x7f\xae\x74\x7c\x4d\x9b\x75\xc0\x48\x09\x6e\x98\xc8\xcc\xfe\x9a\x4b\x4f\x20\x21\x80\xb3\xa3\xe6\x4c\xae\x39\x18\x3b\xeb\x45\x63\x12\x62\x10\x60\xf3\xfe\x67\x75\x71\x52\x9f\x7e\xfd\x73\xf1\xbb\x39\x5e\xc2\xe1\xaa\xbd\x1d\x3a\x4d\xd9\xb6\xfd\x83\xb6\x42\xd8\x2d\x64\x84\xae\xed\xc4\xbb\x02\x5d\xaf\x5f\x70\x00\x8e\x66\xa6\xd0\x72\x65\xee\x6f\xb1\x5d\x5a\xa4\x66\x20\xde\xa7\x32\x4e\x99\x76\x25\x4f\x47\xb8\x2a\x90\x78\xdd\x26\x6b\xf9\x40\x25\x5c\x62\xbd\xf8\x5e\x97\x67\xcd\xf1\xb2\x7e\xf3\xad\x3a\x2a\xab\xf3\xd7\xcd\xe2\x55\xfd\xe1\xf3\xe5\xf9\xa7\xfa\xe4\x4b\x5d\x9e\x55\x3f\xde\xe1\x18\x53\x4b\xee\xc2\xb6\xa9\x04\xde\x6a\x83\x0d\x5e\x6e\x7f\x8c\x11\xf6\xa5\x74\x49\x3d\x64\x5a\x2b\xfd\x4f\xe0\x78\xea\xdf\x63\xe6\x71\x4a\x9f\xb1\xad\xdb\xae\xd7\xbe\x04\x57\x78\xfe\xd3\x19\xd3\xcc\x1d\xce\x8d\x1b\xb8\x89\x54\xc6\x57\x8e\x1b\xb8\x49\x46\x78\x7d\x95\xe7\xdf\xe5\x32\xb6\x16\x77\xec\x2e\x38\x84\xbf\x01\x00\x00\xff\xff\xae\x99\xe1\x3e\xee\x02\x00\x00")

func microserviceProgramModelsUserGoBytes() ([]byte, error) {
	return bindataRead(
		_microserviceProgramModelsUserGo,
		"microservice/program/models/user.go",
	)
}

func microserviceProgramModelsUserGo() (*asset, error) {
	bytes, err := microserviceProgramModelsUserGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/program/models/user.go", size: 750, mode: os.FileMode(420), modTime: time.Unix(1574244782, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceProgramProgramGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xdf\x4a\xdc\x40\x14\xc6\xaf\x33\x4f\x71\x9a\x8b\x92\x2c\x36\xb9\x17\xbc\x69\x8b\x14\x6a\x17\xd1\x27\x18\xe3\x38\x06\x93\xcc\x70\x32\x59\xa9\x4b\x2e\x94\x42\xff\x68\xb1\xe0\x16\x5a\x6b\x2d\x42\x11\xe9\xc5\x6e\x6f\x5d\x6b\x7d\x99\x9d\xdd\x78\xd5\x57\x28\x93\xc9\x5a\x0b\xd2\x5e\xed\xe4\x9c\x6f\xce\xf7\x3b\xdf\x8e\xa4\xd1\x06\xe5\x0c\x24\x0a\x8e\x34\x25\x24\x4e\xa5\x40\x05\x1e\x71\xdc\x44\x70\x97\x10\xc7\xe5\xb1\x5a\x2f\x56\x82\x48\xa4\x61\x1a\x47\x28\x1e\x6c\xc4\xaa\x39\x45\x22\x4d\x45\x16\x26\x82\x73\x86\x2e\x71\xdc\x6e\x17\x82\x67\xa6\xf5\x34\x56\x8f\x92\x98\x65\x6a\x49\x08\x05\x65\x19\x4a\x14\x4a\x84\xa6\xff\x90\xe6\x6c\x99\x61\x27\x8e\x58\x9b\xa6\xac\x2d\xd4\x42\x9c\x31\x28\x4b\xb9\x32\x1d\x61\x2e\x2d\x52\xb5\x6e\x2e\x9a\xef\x5b\xf2\x66\x96\xa1\x0d\x73\x5b\xce\xdd\x7f\x52\x9a\x83\x51\x5a\x42\x2e\x82\x62\x85\x61\x20\x90\x87\x5b\x54\xda\x92\xe0\x09\x0b\xb8\x48\x68\xc6\xeb\x06\x47\x19\xb9\xc4\x27\x24\x0c\x61\xd1\x9a\x81\x1e\xf6\x26\xbd\x33\xdd\x3f\x1e\x5d\x1e\x10\xf5\x5c\xb2\x9b\x4e\xae\xb0\x88\x14\x74\x89\x93\x63\x07\x00\xa0\x65\xed\x6a\x6c\x86\xc4\xb1\xf9\x40\x6b\x8b\xca\x60\xb9\xe0\x14\xd9\xea\x42\x5d\x22\x65\x6d\xd1\x66\x9b\xa0\x5f\x7d\xd2\x17\x43\x6b\x42\xd6\x8a\x2c\x32\x55\xcf\x87\xd6\xd4\xa5\x4b\x9c\x30\x84\xd1\xe5\xd5\xa4\x77\x76\x7d\xf1\xa1\xea\x7f\x1d\x1f\xbd\xd5\x6f\x4e\x7e\xfd\xd8\xd3\xa7\x3b\xe3\xe3\xa3\xea\xe5\x37\xdd\x3f\x1c\x9d\xbf\xd6\xfb\x83\xaa\xff\x73\x72\xd9\xd7\x83\x73\x3d\xec\xe9\xfd\x9d\xf1\xfb\xef\x35\xdc\x0c\x30\x44\x98\x9d\x83\x06\xb0\xcd\x36\x1f\xb3\x35\x5a\x24\xca\xa2\x7a\x3e\x71\xe2\xb5\x5a\x74\x6f\x0e\xb2\x38\x31\xae\x06\x3f\x98\xa7\x8a\x26\x49\xe6\xb9\x96\xd3\x04\x64\xed\xaf\x7b\x1f\xab\xc1\xc0\xad\x27\xfb\xc4\x29\x89\x83\x4c\x15\x98\xc1\xfd\x06\xdc\x4c\xc8\xb1\x33\x6b\x82\x31\x08\x76\x20\x67\x38\x0b\xf6\x37\xb0\x59\xcc\x98\xcb\x36\x8f\xa5\x22\x83\xea\xea\x5d\x75\xb2\x37\x39\xdb\xd5\xc3\x7d\x9b\x87\x27\x6f\xc2\xf0\x8d\xc4\xf3\x0d\x9d\x0c\x72\xec\xd8\xa4\x3d\x23\xf3\x0c\x9a\xdd\x06\x5a\xe6\xdc\xfc\x0b\xb5\xd8\xf9\xcf\xfb\x0b\x96\x18\x8f\x73\xc5\xf0\x0e\xdd\x93\x22\x95\x50\x96\x4d\x50\x7f\x5c\x66\x20\x63\x9b\xde\xf4\x29\x06\xf3\x02\x19\x47\x51\x64\xab\xbe\x89\xc3\x9f\xe6\xd1\xac\xb6\xac\x84\x04\xbb\xd5\xe4\xe2\x60\xfc\xf9\x4b\x75\xba\xad\xb7\x0f\x27\x87\x2f\x46\xc3\xdd\x3b\xf6\x34\xfa\xbf\x16\xad\xbf\x6f\x0d\xfd\x1d\x00\x00\xff\xff\x3f\x2e\x37\x82\xc2\x03\x00\x00")

func microserviceProgramProgramGoBytes() ([]byte, error) {
	return bindataRead(
		_microserviceProgramProgramGo,
		"microservice/program/program.go",
	)
}

func microserviceProgramProgramGo() (*asset, error) {
	bytes, err := microserviceProgramProgramGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/program/program.go", size: 962, mode: os.FileMode(420), modTime: time.Unix(1574333755, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceProgramServicesAdminGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xc1\x4a\x43\x31\x10\x45\xd7\x6f\xbe\x22\x64\xa5\x05\x9b\x6f\x50\x97\x6a\x11\xfd\x82\x34\x1d\x5e\x63\x9b\x4c\xc8\x9b\x8a\x52\xde\x4e\x5c\xb6\x5d\xb8\x51\x41\x10\x11\x04\xa1\x76\x2f\xea\xcf\xf4\x35\xbf\x21\xb1\x15\x5c\xba\x9b\x3b\xf7\xdc\xcb\x0d\xda\x0c\x74\x89\xa2\xc2\x78\x6e\x0d\x56\x00\xd6\x05\x8a\x2c\xb6\xa0\x90\x86\x3c\xe3\x05\x4b\x28\x24\x7a\x43\x3d\xeb\x4b\x75\x56\x91\x97\x00\x85\x2c\x2d\xf7\x47\xdd\xb6\x21\xa7\x9c\x35\x91\x76\x06\x96\x37\x97\x21\xe7\xc8\x2b\xa3\x4d\x1f\xe5\xbf\xd0\x1f\x81\x31\x52\xcc\xfc\x78\x2c\xda\x47\xf9\x73\x60\x79\x7f\x68\xd1\xf3\x09\x11\x8b\xba\x56\x21\x12\x93\xca\xfe\x9e\xae\xf0\x74\x3d\xba\xa3\x1d\x76\x88\x0f\xad\x47\x51\xd7\xa1\xfb\x5b\x91\x43\xc7\x9a\xfb\x39\x98\xf5\x1f\x7c\xd3\x55\x46\xed\x94\xa3\x1e\x0e\x2b\x09\xdb\x00\xa0\x5a\x62\x35\x9d\x2d\x3f\xef\xd3\xfb\x6d\x9a\x3f\xa6\xd9\x75\x33\x9b\x34\xd3\xc5\xf2\xe3\x2b\xdd\xbc\xa4\xbb\xab\x18\x8c\x68\x29\x00\xa5\xc4\x6e\xcf\x59\x2f\x9a\xf9\x43\x9a\x2c\xca\x18\xcc\x9a\x4f\xaf\x6f\x31\x98\xd5\xe4\xb9\x99\x3e\x01\x5f\x06\xdc\x70\x15\xc7\x91\x61\x31\x86\x22\x2f\x87\x1a\xbe\x03\x00\x00\xff\xff\x24\x83\x50\x12\x7a\x01\x00\x00")

func microserviceProgramServicesAdminGoBytes() ([]byte, error) {
	return bindataRead(
		_microserviceProgramServicesAdminGo,
		"microservice/program/services/admin.go",
	)
}

func microserviceProgramServicesAdminGo() (*asset, error) {
	bytes, err := microserviceProgramServicesAdminGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/program/services/admin.go", size: 378, mode: os.FileMode(420), modTime: time.Unix(1574333696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceProgramServicesBaseGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\x28\x4e\x2d\x2a\xcb\x4c\x4e\x2d\xe6\xe2\xd2\xd7\x52\x78\xba\x6e\xd1\xb3\x8e\xed\xcf\x57\xaf\x7f\x3a\xa9\xe7\xf9\xba\x85\xcf\x27\xb4\x81\xd8\xad\x6b\x9e\x4f\x59\xf1\xb2\x61\xf7\x8b\x7d\x13\x15\xb4\xf4\xb9\xb8\xf4\xf5\x15\x9c\x12\x8b\x53\x15\x9e\xce\xdf\xf5\x7c\x61\xc3\xb3\x39\xbd\x4f\xbb\x16\x3e\x5d\xbf\xf3\xc5\xc6\x85\x5c\x25\x95\x05\xa9\x10\xc9\xe2\x92\xa2\xd2\xe4\x12\x85\x6a\xae\x5a\x2e\x40\x00\x00\x00\xff\xff\xc9\xa3\x99\x2c\x6b\x00\x00\x00")

func microserviceProgramServicesBaseGoBytes() ([]byte, error) {
	return bindataRead(
		_microserviceProgramServicesBaseGo,
		"microservice/program/services/base.go",
	)
}

func microserviceProgramServicesBaseGo() (*asset, error) {
	bytes, err := microserviceProgramServicesBaseGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/program/services/base.go", size: 107, mode: os.FileMode(420), modTime: time.Unix(1574244782, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceProgramServicesForegroundGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xb1\x4a\x6b\x41\x10\x86\xeb\x33\x4f\xb1\x6c\x75\x6f\xe0\x66\xdf\xe1\x0a\x36\x6a\x10\x7d\x82\xcd\x66\x38\x59\x93\xdd\x59\xe6\x4c\x44\x09\xa7\xb3\xb0\x4a\x2c\x6c\x54\xb0\x50\x04\x41\x88\x76\x16\xa2\xbe\x4c\x92\xf3\x1a\xb2\x1a\x25\xa5\xdd\xfe\x3b\xdf\xf7\xf3\x27\xeb\x06\xb6\x44\x55\x21\x1f\x7a\x87\x15\x80\x0f\x89\x58\xd4\x1f\x28\xb4\xa3\x28\x78\x24\x1a\x0a\x8d\xd1\x51\xcf\xc7\xd2\x1c\x54\x14\x35\x40\xa1\x4b\x2f\xfd\x51\xb7\xed\x28\x98\xe0\x1d\xd3\xbf\x81\x97\xd5\xcb\x51\x08\x14\x8d\xb3\xae\x8f\xfa\x57\xe8\x67\x40\x66\xe2\xcc\x8f\xc7\xaa\xbd\x93\x7f\xb6\xbc\x6c\x0c\x3d\x46\xd9\x23\x12\x55\xd7\x26\x31\x09\x99\x7c\xff\x6f\x2b\xdc\xff\x1a\xdd\xb1\x01\x3b\x24\xdb\x3e\xa2\xaa\xeb\xd4\xfd\xae\xc8\xd2\xae\x95\x7e\x16\x73\x5e\xc3\x57\x5d\x25\xdb\x60\x02\xf5\x70\x58\x69\xf8\x0b\x60\x5a\x6a\x39\x3d\x9b\xbf\x5d\x35\x2f\x17\x8b\xd9\xcd\xf2\xf4\xb9\x79\x78\x9c\xbf\xbe\x37\xe7\xf7\xcd\xe5\x09\x27\xa7\x5a\x06\xc0\x18\xb5\x49\x8c\x25\xd3\x28\xf6\xd4\x62\x76\xdd\x4c\x9e\x4a\x4e\xee\xc7\xe0\xe4\x96\x93\xbb\xc5\xf4\x16\xe4\x38\xe1\x3a\x5c\x09\x8f\x9c\xa8\x31\x14\x79\x3f\xd4\xf0\x11\x00\x00\xff\xff\x20\xb5\xb2\x13\x80\x01\x00\x00")

func microserviceProgramServicesForegroundGoBytes() ([]byte, error) {
	return bindataRead(
		_microserviceProgramServicesForegroundGo,
		"microservice/program/services/foreground.go",
	)
}

func microserviceProgramServicesForegroundGo() (*asset, error) {
	bytes, err := microserviceProgramServicesForegroundGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/program/services/foreground.go", size: 384, mode: os.FileMode(420), modTime: time.Unix(1574333671, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceTestLogin_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x4e\x2b\x31\x0c\x86\xd7\xf1\x29\xf2\xb2\x9a\x79\x7a\x9a\x9e\xa0\x9b\x87\x84\x90\x68\x2b\xd4\x72\x81\x90\xba\x83\x21\x63\x8f\x12\xb7\x80\x4a\xee\x8e\x92\xb2\x44\x65\x11\x59\xff\x6f\xfb\xcf\xe7\xd9\x87\x57\x3f\xa2\x55\xcc\x0a\x40\xd3\x2c\x49\x6d\x07\xc6\x05\x61\xc5\x77\x75\x60\x1c\x72\x90\x3d\xf1\xb8\x78\xc9\xc2\xd5\x88\x32\xd6\x92\x3f\x38\xd4\x5a\x77\x89\x9b\xa5\x34\xa1\x03\x30\xee\x7c\xb6\xc3\x9a\x42\x92\x7b\xd2\x9b\x48\xc8\xba\x15\x51\x5b\xca\x22\x34\xb5\xa8\x03\xff\x7d\xc6\x1d\xa6\x13\x05\xdc\xf8\x09\x37\xa2\x2b\x62\xb4\xa5\xb8\xab\x09\x73\x12\x95\xeb\x01\xf3\x93\x83\x1e\xe0\xe4\x53\x3d\x26\x44\xfb\xcb\xf4\xf0\x43\xff\xee\x38\xcd\xb6\x94\xcb\xdf\x35\xed\x70\xe4\x60\x1f\x31\xeb\xda\x13\x77\x93\xfd\xfb\x7d\xf8\xb0\xee\xed\x19\x4c\x94\x71\xd8\xa1\xde\x46\x3f\xe6\xae\x8a\x55\x7e\x96\xa4\x07\x8a\x68\x3f\xed\xc5\xd0\x7d\x6b\xf7\x60\x2a\x1a\xa6\xf6\x24\x55\xc4\x7f\x4d\x2e\xaf\x93\x0e\x1b\x7c\xbb\x00\x75\x3d\x18\x3a\xb4\x9d\x3f\x4b\xcb\x14\x2b\x42\x63\x78\xf0\x4c\x21\x72\x87\x29\xf5\x60\x0a\x98\x69\xd8\x1e\xb9\xeb\xa1\xc0\x57\x00\x00\x00\xff\xff\xf0\x45\x82\x9d\xee\x01\x00\x00")

func microserviceTestLogin_testGoBytes() ([]byte, error) {
	return bindataRead(
		_microserviceTestLogin_testGo,
		"microservice/test/login_test.go",
	)
}

func microserviceTestLogin_testGo() (*asset, error) {
	bytes, err := microserviceTestLogin_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/test/login_test.go", size: 494, mode: os.FileMode(420), modTime: time.Unix(1574333434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceTestTestSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x2f\x2d\x2e\xd2\x4f\xca\xcc\xd3\x4f\xcd\x2b\x53\x28\xce\xe0\xe2\x4a\xcf\x57\x28\x49\x2d\x2e\x51\xd0\x2d\x53\xd0\x4d\xce\x2f\xcd\x2b\xb1\x35\x04\x04\x00\x00\xff\xff\x9b\x77\x9f\x3a\x26\x00\x00\x00")

func microserviceTestTestShBytes() ([]byte, error) {
	return bindataRead(
		_microserviceTestTestSh,
		"microservice/test/test.sh",
	)
}

func microserviceTestTestSh() (*asset, error) {
	bytes, err := microserviceTestTestShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/test/test.sh", size: 38, mode: os.FileMode(493), modTime: time.Unix(1574244782, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _microserviceVersion = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x33\xd4\x33\xd0\x33\xe0\x02\x04\x00\x00\xff\xff\xa4\x33\x68\x5e\x07\x00\x00\x00")

func microserviceVersionBytes() ([]byte, error) {
	return bindataRead(
		_microserviceVersion,
		"microservice/version",
	)
}

func microserviceVersion() (*asset, error) {
	bytes, err := microserviceVersionBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "microservice/version", size: 7, mode: os.FileMode(420), modTime: time.Unix(1574244782, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clientReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x51\x4b\xfa\x50\x18\xc6\xef\xcf\xa7\x38\xe0\xb5\xfe\x3f\x84\xfc\x21\xa9\x14\xcc\x7b\xa9\x31\xea\xa0\x6b\x22\xb3\x1b\x11\xa4\x92\x99\x4c\x17\x09\x25\xea\x45\xca\x04\xb1\x3c\xbb\x28\xdc\xe6\x31\xfb\x32\xe7\x3d\xdb\xae\xfc\x0a\x11\x27\x48\xba\x7b\x79\x7e\xbc\xcf\xf3\x4b\xe0\x7a\x1d\xa7\x4e\xd4\xea\x15\x51\xd4\xec\xa9\xa6\x1e\xd4\xb4\x0a\x6e\x34\x30\xd0\xa9\x68\x7b\xe1\x8b\x0b\x0f\x96\x18\x77\xa1\x33\x01\x3a\xe4\xc1\x1d\x42\x62\xe9\xc0\xba\x0f\xcb\x01\x8c\xe7\xdc\x77\xb8\xbf\x10\x8f\x26\x67\x2b\x70\x02\xee\x37\xb9\xbf\xf8\x46\xd7\xf3\x4a\x55\x37\x74\x49\x76\x1b\x6b\x9f\xc0\x96\xca\x46\xa5\x4c\xd4\x4b\x03\xa1\x3f\x41\xdc\x1c\x46\x9f\xa6\x46\x94\xaa\x9e\x54\xca\x04\xbc\x19\xb4\xbc\x90\xbd\x8b\x8e\x83\x50\x22\x81\xc1\x31\xc5\xdb\x7c\xef\xed\xd7\x75\xdd\x07\xdb\xe5\x6c\x26\x9e\x03\xd1\xa5\xdc\xef\xc2\xbd\x05\xad\x57\xb0\x7d\xe8\xb1\x88\x6e\xc3\x8f\x9f\x30\xf2\x5c\xd8\xde\xee\x36\x56\xcc\x06\x11\x75\xce\x89\x71\x51\x3b\x4b\x29\xba\xf6\x4f\xee\x96\x88\x21\xaf\x12\x31\x92\x52\x0b\x43\x7b\x04\x6c\x1d\x4f\x82\x70\x44\xc5\xd3\x0a\x6c\x57\x9a\x86\x3d\x17\xa6\x37\x60\x0f\x62\xd3\xc6\xc7\x99\x74\x3e\x77\x98\x29\x14\xd3\x47\x99\xff\xd9\x42\x31\x9f\xcb\x15\xb0\x5c\x46\x5f\x01\x00\x00\xff\xff\x58\x0e\x0a\xd9\x6d\x01\x00\x00")

func clientReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_clientReadmeMd,
		"client/README.md",
	)
}

func clientReadmeMd() (*asset, error) {
	bytes, err := clientReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "client/README.md", size: 365, mode: os.FileMode(420), modTime: time.Unix(1574393256, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clientClientTplReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xa8\xae\x56\xd0\x0b\x4e\x2d\x2a\xcb\x4c\x4e\xf5\x4b\xcc\x4d\xf5\x28\xcd\x2d\x50\xa8\xad\x55\x78\xba\x6e\xd1\xb3\x8e\xed\xcf\x57\xaf\xe7\xe2\x4a\xcb\x2f\x4a\x4d\x2f\xca\x2f\xcd\x4b\xd1\x4b\xcf\x57\x78\xb2\x63\xed\xd3\xb5\x33\x9e\x36\xad\x78\x3e\x65\xc5\xb3\x8e\xed\xce\xcf\x57\xaf\x87\xaa\x05\xf3\x9f\xaf\x5e\x5f\x54\x90\xcc\xc5\x95\x98\x92\x9b\x99\x87\xaa\x7e\xdd\xc2\xe7\x13\xda\x9e\x4e\xe8\x7b\xda\xbf\xe1\xe5\x9c\x86\x17\xcb\x1a\x5f\x6c\x68\x7e\x3e\x65\xc5\xf3\x59\x2d\x20\x1d\x80\x00\x00\x00\xff\xff\x68\xfe\x9a\x5e\x8a\x00\x00\x00")

func clientClientTplReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_clientClientTplReadmeMd,
		"client/client/tpl/README.md",
	)
}

func clientClientTplReadmeMd() (*asset, error) {
	bytes, err := clientClientTplReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "client/client/tpl/README.md", size: 138, mode: os.FileMode(420), modTime: time.Unix(1574393242, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clientClientTplAdminGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xc1\x6a\xdb\x30\x18\xc7\xcf\xd2\x53\x7c\xf3\x49\x1e\x9b\x74\x1f\xf8\xb0\x25\x87\xc1\x36\x1f\xb6\x27\x50\x34\xc5\x13\xb1\x25\xa3\xc8\xc9\x21\xe8\x3a\xc2\x60\xa5\xf7\x96\x42\x0a\x3d\x05\x92\x63\xa1\x3d\xf4\x69\x1c\xf7\x31\x8a\xec\x14\x4c\x69\xe3\x83\x41\x88\xbf\x7e\xdf\xdf\x3f\xa9\xe4\x62\xc6\x33\x09\xab\x15\xd0\x2f\x7c\x2e\x7f\x49\xbb\x50\x42\xa6\xbc\x90\xa9\x71\xdf\x95\x96\xe0\x3d\xc6\xaa\x28\x8d\x75\x40\x30\x3a\x19\x2c\x27\x10\x85\xc0\x0f\x25\xac\xf9\xa6\xdc\x28\x57\x52\xbb\x9f\xc6\x38\xf0\x9e\x95\xd6\x38\xc3\x06\x00\x11\x46\x51\xa6\xdc\x9f\x6a\x42\x85\x29\x58\x11\x48\x1f\x67\xca\x75\xab\xb0\x10\x2d\xb4\xcd\x19\x93\xe5\x92\x66\x26\xe7\x3a\xa3\xc6\x66\x2c\xb3\xa5\x88\x70\x8c\xf1\x82\xdb\xd0\x76\xbe\x10\x9f\x7f\x17\x4a\x87\x29\x90\x74\xe5\xde\x1c\xde\x1e\x64\x0c\x52\xb9\x6c\x0f\x75\xed\xa1\x5e\x5f\xd4\xf7\x77\xcd\x6e\xd3\x9c\xff\x6d\xb6\xfb\x7a\x77\x7d\x58\xdf\x36\xdb\x3d\x9e\x56\x5a\xbc\x08\x93\x18\xc8\xc9\x19\x7d\xf0\x80\x09\xda\x66\x5f\x09\x7d\xad\x8a\x12\xbc\xef\x28\x1f\x40\x5a\x1b\x3e\x63\x63\x58\x61\x24\xba\x8d\x4f\x09\x74\x9e\x68\x2a\x97\x63\x39\xe5\x55\x7e\xbc\x0d\x72\xdc\xef\x01\x49\x5f\x53\x1c\x63\xa4\xa6\x2d\xe4\x5d\x02\x5a\xe5\x81\x8a\xac\x74\x95\xd5\x18\x79\x8c\x18\x83\xc7\x87\xab\xc3\xd9\xcd\xe1\xf2\x7f\xfd\x6f\x13\x4c\xa0\x90\x4e\x40\xd0\xb1\xe2\x39\x09\x5e\x88\x10\xf0\x3e\xdc\x06\xed\xa6\x8e\x8c\xd6\x6d\xbf\xd3\x0f\xa8\xaf\x27\x19\x14\x94\xca\xe5\x90\x1e\x22\x44\x8c\x91\x8f\xf1\xf3\x1f\x78\xfc\x14\x00\x00\xff\xff\x14\x8a\x71\x69\xf3\x02\x00\x00")

func clientClientTplAdminGoBytes() ([]byte, error) {
	return bindataRead(
		_clientClientTplAdminGo,
		"client/client/tpl/admin.go",
	)
}

func clientClientTplAdminGo() (*asset, error) {
	bytes, err := clientClientTplAdminGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "client/client/tpl/admin.go", size: 755, mode: os.FileMode(420), modTime: time.Unix(1574763730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clientClientTplForegroundGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xcf\x4a\xec\x30\x14\xc6\xd7\x39\x4f\x71\x6e\x57\xe9\xe5\xde\x64\x2f\x74\xe3\xcc\x42\x50\xbb\xd0\x27\xc8\x84\x4c\x0d\xd3\x26\x25\x93\xce\x2c\x86\xee\x07\x41\x5f\x40\x11\x14\x5c\x09\xba\x14\x74\xe1\xd3\x74\xf4\x31\x24\x6d\xfd\xb3\xd0\xe9\xa2\x10\x92\x2f\xbf\xf3\xe5\x47\x4b\x21\x67\x22\x53\xb8\x5a\x21\xdb\x15\x73\x75\xac\xdc\x42\x4b\x95\x8a\x42\xa5\xd6\x1f\x68\xa3\xb0\xae\x01\x74\x51\x5a\xe7\x91\x02\xd9\x1a\x2c\x27\x18\x85\xc0\xa1\x96\xce\xee\x6b\x3f\xca\xb5\x32\xfe\xc8\x5a\x8f\x75\xcd\x4b\x67\xbd\xe5\x03\x80\x08\x48\x94\x69\x7f\x52\x4d\x98\xb4\x05\x2f\x02\xe9\xff\x4c\xfb\x6e\x15\x16\xb2\x85\xb6\x39\x6b\xb3\x5c\xb1\xcc\xe6\xc2\x64\xcc\xba\x8c\x67\xae\x94\x11\xc4\x00\x0b\xe1\x42\xdb\xf9\x42\x86\x01\x98\x74\xbd\x7e\x9d\xdb\xde\xe1\x1c\x53\xb5\xec\x3a\x63\xb3\xbe\x68\x9e\x9f\x9a\xfb\x9b\xcd\xfa\xf1\xf5\xee\x01\xa6\x95\x91\x5f\xc7\x34\x46\xba\x15\xd8\x53\x06\x1e\xcb\x7e\x38\xdf\xab\x8a\xf2\x13\xf0\x0f\x95\x73\xe1\xb3\x2e\xc6\x15\x10\xd9\x6d\xec\x24\xd8\x59\x60\xa9\x5a\x8e\xd5\x54\x54\x79\xef\x9a\xf6\xfb\xdf\x80\xb4\x97\x10\xc7\x40\xf4\xb4\xbd\xff\x27\x41\xa3\xf3\x00\x24\x4e\xf9\xca\x19\x20\x35\x10\xce\xf1\xed\xe5\x6a\x73\x7e\xbb\xb9\x3c\x6b\x4e\xaf\xc3\xab\x49\x48\x27\x28\xd9\x58\x8b\x9c\x06\x07\x54\x4a\xfc\x1b\x34\xb3\x6e\xe0\xc8\x1a\xd3\x56\xdb\xfe\x67\xf4\x3e\x92\x41\x23\xa9\x5a\x0e\x49\xa1\x52\xc6\x40\xea\x18\x3e\xca\xd7\xf0\x1e\x00\x00\xff\xff\x96\xe6\x94\x70\xc7\x02\x00\x00")

func clientClientTplForegroundGoBytes() ([]byte, error) {
	return bindataRead(
		_clientClientTplForegroundGo,
		"client/client/tpl/foreground.go",
	)
}

func clientClientTplForegroundGo() (*asset, error) {
	bytes, err := clientClientTplForegroundGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "client/client/tpl/foreground.go", size: 711, mode: os.FileMode(420), modTime: time.Unix(1574393115, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clientProtoTplReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xa8\xae\x56\xd0\x0b\x4e\x2d\x2a\xcb\x4c\x4e\xf5\x4b\xcc\x4d\xf5\x28\xcd\x2d\x50\xa8\xad\x55\x28\x48\x7a\x36\xa7\xf7\x69\xd7\xc2\x67\xfd\xfd\x2f\xf6\x6f\xe0\xe2\x4a\xcb\x2f\x4a\x4d\x2f\xca\x2f\xcd\x4b\xd1\x2b\x28\xca\x2f\xc9\x57\x78\xba\x6e\xd6\x93\x9d\x9d\xce\xcf\x57\xaf\x7f\x3e\x65\xc5\xb3\x8e\xed\x2f\xe7\x34\xbc\x58\xd6\xf8\x62\x43\xf3\xf3\x29\x2b\x9e\xcf\x6a\x79\x3a\xa9\xe7\xd9\xf4\x05\x4f\xd7\x75\x3e\x6d\x5d\xf1\x72\x4e\xc3\xb3\x8d\x4d\xcf\x67\xb5\x14\x15\x24\x73\x71\x25\xa6\xe4\x66\xe6\x41\x0d\x79\xbe\x6e\xe1\xf3\x09\x6d\xcf\x57\xaf\x2f\x2a\x48\x7e\xb2\xa3\xe1\x45\xc7\x9a\xa7\xeb\x77\x42\x34\xbd\x58\xd6\xf8\x6c\x63\xd3\xb3\xf5\x53\x5e\xec\x6b\x7e\xb9\x7a\x06\x17\x20\x00\x00\xff\xff\x7a\x16\x3c\xe6\xaa\x00\x00\x00")

func clientProtoTplReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_clientProtoTplReadmeMd,
		"client/proto/tpl/README.md",
	)
}

func clientProtoTplReadmeMd() (*asset, error) {
	bytes, err := clientProtoTplReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "client/proto/tpl/README.md", size: 170, mode: os.FileMode(420), modTime: time.Unix(1574393378, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clientProtoTplAdminProto = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xae\xcc\x2b\x49\xac\x50\xb0\x55\x50\x2a\x28\xca\x2f\xc9\x37\x56\xb2\xe6\xe2\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xa8\xae\x56\xd0\x73\x4a\x2c\x4e\x0d\x4e\x2d\x2a\xcb\x4c\x4e\xf5\x4b\xcc\x4d\xf5\xcb\x2f\xf1\xc9\xcc\x4b\x55\xa8\xad\x2d\x48\xb2\xe6\xca\x2f\x28\xc9\xcc\xcf\x53\x48\xcf\x8f\x87\x69\xb1\x55\x50\x22\xa0\x0b\x64\x81\xbe\xbe\x82\x63\x4a\x6e\x66\x1e\x16\xa5\x1e\xa5\xb9\x05\x0a\xb5\xb5\x0a\xcf\xe6\xf4\x3e\xed\x5a\xf8\x74\xdd\xac\x27\x3b\x3b\xb9\x8a\x21\xf2\x04\x35\x55\x73\x29\x28\x70\xd5\x72\x01\x02\x00\x00\xff\xff\x99\x6c\x89\x08\xd4\x00\x00\x00")

func clientProtoTplAdminProtoBytes() ([]byte, error) {
	return bindataRead(
		_clientProtoTplAdminProto,
		"client/proto/tpl/admin.proto",
	)
}

func clientProtoTplAdminProto() (*asset, error) {
	bytes, err := clientProtoTplAdminProtoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "client/proto/tpl/admin.proto", size: 212, mode: os.FileMode(420), modTime: time.Unix(1574393139, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clientProtoTplForegroundProto = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xae\xcc\x2b\x49\xac\x50\xb0\x55\x50\x2a\x28\xca\x2f\xc9\x37\x56\xb2\xe6\xe2\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xa8\xae\x56\xd0\x73\x4a\x2c\x4e\x0d\x4e\x2d\x2a\xcb\x4c\x4e\xf5\x4b\xcc\x4d\xf5\xcb\x2f\xf1\xc9\xcc\x4b\x55\xa8\xad\x2d\x48\xb2\xe6\xca\x2f\x28\xc9\xcc\xcf\x53\x48\xcf\x8f\x87\x69\xb1\x55\x50\x22\xa0\x0b\x64\x81\xbe\x3e\x36\xb3\x3d\x4a\x73\x0b\x14\x6a\x6b\x15\x9e\xcd\xe9\x7d\xda\xb5\xf0\xe9\xba\x59\x4f\x76\x76\x72\x15\x43\xe4\xf1\xa9\xaf\xe6\x52\x50\xe0\xaa\xe5\x02\x04\x00\x00\xff\xff\xdf\xb9\x26\x50\xca\x00\x00\x00")

func clientProtoTplForegroundProtoBytes() ([]byte, error) {
	return bindataRead(
		_clientProtoTplForegroundProto,
		"client/proto/tpl/foreground.proto",
	)
}

func clientProtoTplForegroundProto() (*asset, error) {
	bytes, err := clientProtoTplForegroundProtoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "client/proto/tpl/foreground.proto", size: 202, mode: os.FileMode(420), modTime: time.Unix(1574393109, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clientProtoTplGenSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x4b\xc4\x30\x10\x85\xef\xf9\x15\x4f\x7a\x13\xdb\x39\x78\xdb\x65\xcf\xe2\x59\x3c\x4b\xda\x9d\x9d\x06\xd3\x4c\x49\x26\xab\x20\xfe\x77\x69\xb6\x08\x82\x97\xe4\x1d\x5e\xbe\xef\xa5\xbb\xa3\x5a\x32\x8d\x21\x11\xa7\x2b\xca\xec\x5c\x87\xe7\x54\xcc\xc7\x88\x35\xab\xe9\x23\x2e\x59\x17\x14\xad\x79\x62\xd7\x01\x63\xe6\x0f\x84\xbd\xe2\xab\xe9\xa4\xe9\xd2\xc2\xe2\xdf\x19\x31\x8c\xa6\x1a\xb7\xa6\x04\xc3\x14\x35\x31\x66\xb3\xb5\x1c\x88\x24\xd8\x5c\xc7\x61\xd2\x85\x44\x55\x22\x53\x73\x8c\xf5\xb2\xf5\x07\xda\x28\xc2\x69\x28\x33\x8e\x18\x68\x23\x07\xa9\x99\x71\x44\x83\xef\xd7\x6e\x77\x9d\xeb\xf0\xba\x9e\xbd\xf1\x6d\xeb\x84\x27\xc5\x18\xd2\x39\x24\x29\xb8\x06\xdf\x56\x28\x84\x0d\x7d\xc5\x1f\x7b\xf4\x49\x7e\xed\xf4\xd5\xd2\xc3\x8d\xd2\x0b\xa7\x5e\xf4\xbb\xf1\x5f\x98\xe1\x63\xd1\x0d\xf5\xdf\x37\xf2\x3a\xb5\xa3\x17\x25\xcb\xcc\xb4\xf8\x62\x9c\x89\x3f\xfd\xb2\x46\x2e\xce\xed\xd3\xee\x87\x16\xd0\xf7\xa2\x6f\x5a\xed\xb4\xc6\x2a\x21\x95\xd3\xf6\xfa\x30\xb8\x9f\x00\x00\x00\xff\xff\x87\x95\xa5\x56\x8b\x01\x00\x00")

func clientProtoTplGenShBytes() ([]byte, error) {
	return bindataRead(
		_clientProtoTplGenSh,
		"client/proto/tpl/gen.sh",
	)
}

func clientProtoTplGenSh() (*asset, error) {
	bytes, err := clientProtoTplGenShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "client/proto/tpl/gen.sh", size: 395, mode: os.FileMode(493), modTime: time.Unix(1574334531, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"microservice/.gitignore":                     microserviceGitignore,
	"microservice/CodeFormat.md":                  microserviceCodeformatMd,
	"microservice/Dockerfile":                     microserviceDockerfile,
	"microservice/Makefile":                       microserviceMakefile,
	"microservice/README.md":                      microserviceReadmeMd,
	"microservice/main.go":                        microserviceMainGo,
	"microservice/program/models/README.md":       microserviceProgramModelsReadmeMd,
	"microservice/program/models/user.go":         microserviceProgramModelsUserGo,
	"microservice/program/program.go":             microserviceProgramProgramGo,
	"microservice/program/services/admin.go":      microserviceProgramServicesAdminGo,
	"microservice/program/services/base.go":       microserviceProgramServicesBaseGo,
	"microservice/program/services/foreground.go": microserviceProgramServicesForegroundGo,
	"microservice/test/login_test.go":             microserviceTestLogin_testGo,
	"microservice/test/test.sh":                   microserviceTestTestSh,
	"microservice/version":                        microserviceVersion,
	"client/README.md":                            clientReadmeMd,
	"client/client/tpl/README.md":                 clientClientTplReadmeMd,
	"client/client/tpl/admin.go":                  clientClientTplAdminGo,
	"client/client/tpl/foreground.go":             clientClientTplForegroundGo,
	"client/proto/tpl/README.md":                  clientProtoTplReadmeMd,
	"client/proto/tpl/admin.proto":                clientProtoTplAdminProto,
	"client/proto/tpl/foreground.proto":           clientProtoTplForegroundProto,
	"client/proto/tpl/gen.sh":                     clientProtoTplGenSh,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"client": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{clientReadmeMd, map[string]*bintree{}},
		"client": &bintree{nil, map[string]*bintree{
			"tpl": &bintree{nil, map[string]*bintree{
				"README.md":     &bintree{clientClientTplReadmeMd, map[string]*bintree{}},
				"admin.go":      &bintree{clientClientTplAdminGo, map[string]*bintree{}},
				"foreground.go": &bintree{clientClientTplForegroundGo, map[string]*bintree{}},
			}},
		}},
		"proto": &bintree{nil, map[string]*bintree{
			"tpl": &bintree{nil, map[string]*bintree{
				"README.md":        &bintree{clientProtoTplReadmeMd, map[string]*bintree{}},
				"admin.proto":      &bintree{clientProtoTplAdminProto, map[string]*bintree{}},
				"foreground.proto": &bintree{clientProtoTplForegroundProto, map[string]*bintree{}},
				"gen.sh":           &bintree{clientProtoTplGenSh, map[string]*bintree{}},
			}},
		}},
	}},
	"microservice": &bintree{nil, map[string]*bintree{
		".gitignore":    &bintree{microserviceGitignore, map[string]*bintree{}},
		"CodeFormat.md": &bintree{microserviceCodeformatMd, map[string]*bintree{}},
		"Dockerfile":    &bintree{microserviceDockerfile, map[string]*bintree{}},
		"Makefile":      &bintree{microserviceMakefile, map[string]*bintree{}},
		"README.md":     &bintree{microserviceReadmeMd, map[string]*bintree{}},
		"main.go":       &bintree{microserviceMainGo, map[string]*bintree{}},
		"program": &bintree{nil, map[string]*bintree{
			"models": &bintree{nil, map[string]*bintree{
				"README.md": &bintree{microserviceProgramModelsReadmeMd, map[string]*bintree{}},
				"user.go":   &bintree{microserviceProgramModelsUserGo, map[string]*bintree{}},
			}},
			"program.go": &bintree{microserviceProgramProgramGo, map[string]*bintree{}},
			"services": &bintree{nil, map[string]*bintree{
				"admin.go":      &bintree{microserviceProgramServicesAdminGo, map[string]*bintree{}},
				"base.go":       &bintree{microserviceProgramServicesBaseGo, map[string]*bintree{}},
				"foreground.go": &bintree{microserviceProgramServicesForegroundGo, map[string]*bintree{}},
			}},
		}},
		"test": &bintree{nil, map[string]*bintree{
			"login_test.go": &bintree{microserviceTestLogin_testGo, map[string]*bintree{}},
			"test.sh":       &bintree{microserviceTestTestSh, map[string]*bintree{}},
		}},
		"version": &bintree{microserviceVersion, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
